@model Uchet.Models.Expense

<div class="modal-content">
    <div class="modal-header d-flex justify-content-center">
        <h4>Новая запись</h4>
    </div>
    @using (Html.BeginForm())
    {
    <div class="modal-body">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Nomenclature)
            @Html.DropDownList("Nomenclature", ViewBag.Nomenclature as SelectList, String.Empty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nomenclature, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date)
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Invoice)
            @Html.EditorFor(model => model.Invoice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Invoice, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingAccountingPoint)
            @Html.DropDownList("ShippingAccountingPoint", ViewBag.ShippingAccountingPoint as SelectList, String.Empty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShippingAccountingPoint, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryAccountingPoint)
            @Html.DropDownList("DeliveryAccountingPoint", ViewBag.DeliveryAccountingPoint as SelectList, String.Empty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryAccountingPoint, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Buyer)
            @Html.DropDownList("Buyer", ViewBag.Buyer as SelectList, String.Empty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Buyer, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity)
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price)
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>


    </div>
    <div class="modal-footer d-flex justify-content">
        <input type="submit" class="btn btn-outline-success" value="Создать" />
        <button type="button" class="btn btn-outline-primary" data-dismiss="modal">Отмена</button>
    </div>
    }
</div>
@Scripts.Render("~/bundles/jqueryval")


